.\" Automatically generated by Pandoc 3.0.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "s" "1" "May 2023" "version 1.1" "General Commands Manual"
.hy
.SH NAME
.PP
\f[B]s\f[R] \[em] \f[B]Sum\f[R] or, \f[B]S\f[R]lightly
\f[B]S\f[R]killful/\f[B]S\f[R]olid/\f[B]S\f[R]imple/\f[B]S\f[R]illy
\f[B]S\f[R]hell \f[B]S\f[R]cript that \f[B]S\f[R]hall
\f[B]S\f[R]ummation in an \f[B]S\f[R]-expre\f[B]SS\f[R]ion
\f[B]S\f[R]tyle with \f[B]S\f[R]avvy.
.SH SYNOPSIS
.PP
\f[B]s\f[R] [list of numbers]
.PD 0
.P
.PD
\f[B]s\f[R] [\f[B]-rv\f[R]] [\f[B]-h\f[R] \f[I]headertype\f[R]] [file
\&...]
.SH DESCRIPTION
.PP
s performs one of the following:
.IP \[bu] 2
Sums the list of numbers given as arguments and outputs the result.
.IP \[bu] 2
Reads the specified file, or standard input if no file is specified,
then prints a list of numbers summed vertically.
When there is only one line of input, sums row-wise.
.SH OPTIONS
.PP
The following options are available (in the latter case):
.TP
\f[B]-d\f[R] delimiter
Specify the field delimiter.
.TP
\f[B]-r\f[R]
Sum by row instead of vertically.
.TP
\f[B]-v\f[R]
Print the original input and summation result.
.TP
\f[B]-h\f[R] x|y
Specifies a heading with the given arguments.
x for the header row and y for the header column.
The specified header row or column is excluded from summation.
.SH EXAMPLES
.PP
Sum arguments:
.IP
.nf
\f[C]
s 14 28
# output: 42

s {1..100}
# output: 5050
\f[R]
.fi
.PP
Sum by standard input:
.IP
.nf
\f[C]
cat <<eof |s
> 20
> 22
eof
# output: 42
\f[R]
.fi
.PP
Sum horizontally when the input is one line.
.IP
.nf
\f[C]
echo 21 21 |s
# output: 42
\f[R]
.fi
.PP
If there are 2 or more rows, show the sum for each column.
.IP
.nf
\f[C]
cat <<eof |s
> 13 6 7
> 8 5 3
> eof
# output: 21 11 10
\f[R]
.fi
.PP
Execute \f[B]s\f[R] again with a pipe, it will print the total sum of
all numbers.
.IP
.nf
\f[C]
cat <<eof |s|s
> 13 6 7
> 8 5 3
> eof
# output: 42
\f[R]
.fi
